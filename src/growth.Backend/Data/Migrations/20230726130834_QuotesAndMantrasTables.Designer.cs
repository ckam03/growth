// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using growth.Backend.Data;

#nullable disable

namespace growth.Backend.Migrations
{
    [DbContext(typeof(GrowthDbContext))]
    [Migration("20230726130834_QuotesAndMantrasTables")]
    partial class QuotesAndMantrasTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("growth.Backend.Features.Entry.JournalEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Entry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("JournalDate")
                        .HasColumnType("date");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.ToTable("JournalEntries");
                });

            modelBuilder.Entity("growth.Backend.Features.Journals.Journal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("growth.Backend.Features.Motivation.DailyQuote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c27f3b2a-ccec-42b5-986f-84167e8370bd"),
                            Author = "Winston Churchill",
                            Quote = "Success is not final, failure is not fatal: it is the courage to continue that counts."
                        },
                        new
                        {
                            Id = new Guid("ac6363a3-3cdb-44cd-a86c-bd7447e65d24"),
                            Author = "Nicole Kidman",
                            Quote = "Life has got all those twists and turns. You've got to hold on tight and off you go."
                        });
                });

            modelBuilder.Entity("growth.Backend.Features.Motivation.Mantras.DailyMantra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Mantra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mantras");
                });

            modelBuilder.Entity("growth.Backend.Features.Entry.JournalEntry", b =>
                {
                    b.HasOne("growth.Backend.Features.Journals.Journal", null)
                        .WithMany("JournalEntries")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("growth.Backend.Features.Journals.Journal", b =>
                {
                    b.Navigation("JournalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
