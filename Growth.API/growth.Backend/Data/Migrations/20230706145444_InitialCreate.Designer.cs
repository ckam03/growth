// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using growth.Backend.Data;

#nullable disable

namespace growth.Backend.Migrations
{
    [DbContext(typeof(GrowthDbContext))]
    [Migration("20230706145444_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("growth.Backend.Features.Entry.JournalEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Entry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("JournalDate")
                        .HasColumnType("date");

                    b.Property<Guid>("JournalId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JournalId");

                    b.ToTable("JournalEntries");
                });

            modelBuilder.Entity("growth.Backend.Features.Journals.Journal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Journals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b01ffc9-3a65-478f-b25d-cc6fdc47583c"),
                            Name = "Test"
                        },
                        new
                        {
                            Id = new Guid("d0103e84-1a22-4faf-a6fd-a532a159335c"),
                            Name = "Test2"
                        });
                });

            modelBuilder.Entity("growth.Backend.Features.Entry.JournalEntry", b =>
                {
                    b.HasOne("growth.Backend.Features.Journals.Journal", null)
                        .WithMany("JournalEntries")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("growth.Backend.Features.Journals.Journal", b =>
                {
                    b.Navigation("JournalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
